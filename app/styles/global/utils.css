.debug {
  outline: 1px solid deeppink;
}

.debug-direct-children > * {
  outline: 1px solid hotpink;
}

.visually-hidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

.visually-align-left-1 {
  margin-left: -1px;
}
.visually-align-left-2 {
  margin-left: -2px;
}
.visually-align-left-3 {
  margin-left: -3px;
}
.visually-align-left-4 {
  margin-left: -4px;
}
.visually-align-left-5 {
  margin-left: -5px;
}
.visually-align-left-6 {
  margin-left: -6px;
}
.visually-align-left-7 {
  margin-left: -7px;
}
.visually-align-left-8 {
  margin-left: -8px;
}

.visually-align-right-1 {
  margin-right: -1px;
}
.visually-align-right-2 {
  margin-right: -2px;
}
.visually-align-right-3 {
  margin-right: -3px;
}
.visually-align-right-4 {
  margin-right: -4px;
}
.visually-align-right-5 {
  margin-right: -5px;
}
.visually-align-right-6 {
  margin-right: -6px;
}
.visually-align-right-7 {
  margin-right: -7px;
}
.visually-align-right-8 {
  margin-right: -8px;
}

@media (pointer: course) {
  /* 
    uses pseudo-element to increase tap target size without affecting layout.

    example: if the element height (100%) is only 24px, the calc equation 
    evaluates (24px - 44px) / 2, resolving to -10. The min function resolves to
    -10, since it's smaller than 0. 

    ! elements selected by .click-target-helper *must* be `position: relative` 
  */
  .click-target-helper::after {
    --click-target-minimum: 44px;
    --inset-by: min(0px, calc((100% - var(--click-target-minimum)) / 2));

    content: "";
    position: absolute;
    top: var(--inset-by);
    left: var(--inset-by);
    right: var(--inset-by);
    bottom: var(--inset-by);
  }
}
